{"ast":null,"code":"import { EntityCollectionServiceBase } from '@ngrx/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/data\";\nexport class ProductService extends EntityCollectionServiceBase {\n  constructor(serviceElementsFactory) {\n    super('Product', serviceElementsFactory);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.EntityCollectionServiceElementsFactory));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EntityCollectionServiceBase","ProductService","constructor","serviceElementsFactory","_","i0","ɵɵinject","i1","EntityCollectionServiceElementsFactory","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mike Odnis\\Documents\\GitHub\\my-static-web-app-and-api\\angular-app\\src\\app\\products\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\nimport { Product } from '../core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService extends EntityCollectionServiceBase<Product> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Product', serviceElementsFactory);\r\n  }\r\n}\r\n"],"mappings":"AACA,SACEA,2BAA2B,QAEtB,YAAY;;;AAInB,OAAM,MAAOC,cAAe,SAAQD,2BAAoC;EACtEE,YAAYC,sBAA8D;IACxE,KAAK,CAAC,SAAS,EAAEA,sBAAsB,CAAC;EAC1C;EAAC,QAAAC,CAAA,G;qBAHUH,cAAc,EAAAI,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,sCAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdR,cAAc;IAAAS,OAAA,EAAdT,cAAc,CAAAU,IAAA;IAAAC,UAAA,EADD;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}