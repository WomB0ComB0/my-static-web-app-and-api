{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-active\": a0\n});\nexport class ModalComponent {\n  constructor() {\n    this.isOpen = false;\n    this.handleYes = new EventEmitter();\n    this.handleNo = new EventEmitter();\n    this.onNo = () => {\n      this.handleNo.emit();\n    };\n    this.onYes = () => {\n      this.handleYes.emit();\n    };\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function ModalComponent_Factory(t) {\n    return new (t || ModalComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalComponent,\n    selectors: [[\"app-modal\"]],\n    inputs: {\n      message: \"message\",\n      isOpen: \"isOpen\"\n    },\n    outputs: {\n      handleYes: \"handleYes\",\n      handleNo: \"handleNo\"\n    },\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"modal\", 3, \"ngClass\"], [1, \"modal-background\"], [1, \"modal-card\"], [1, \"modal-card-head\"], [1, \"modal-card-title\"], [1, \"modal-card-body\"], [1, \"modal-card-foot\"], [1, \"button\", \"modal-no\", 3, \"click\"], [1, \"button\", \"is-primary\", \"modal-yes\", 3, \"click\"]],\n    template: function ModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"header\", 3)(4, \"p\", 4);\n        i0.ɵɵtext(5, \"Confirm\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"section\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"footer\", 6)(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ModalComponent_Template_button_click_9_listener() {\n          return ctx.onNo();\n        });\n        i0.ɵɵtext(10, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ModalComponent_Template_button_click_11_listener() {\n          return ctx.onYes();\n        });\n        i0.ɵɵtext(12, \"Yes\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx.isOpen));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n      }\n    },\n    dependencies: [i1.NgClass],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["EventEmitter","ModalComponent","constructor","isOpen","handleYes","handleNo","onNo","emit","onYes","ngOnInit","_","_2","selectors","inputs","message","outputs","decls","vars","consts","template","ModalComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ModalComponent_Template_button_click_9_listener","ModalComponent_Template_button_click_11_listener","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Mike Odnis\\Documents\\GitHub\\my-static-web-app-and-api\\angular-app\\src\\app\\shared\\modal.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  template: `\r\n    <div class=\"modal\" [ngClass]=\"{ 'is-active': this.isOpen }\">\r\n      <div class=\"modal-background\"></div>\r\n      <div class=\"modal-card\">\r\n        <header class=\"modal-card-head\">\r\n          <p class=\"modal-card-title\">Confirm</p>\r\n        </header>\r\n        <section class=\"modal-card-body\">\r\n          {{message}}\r\n        </section>\r\n        <footer class=\"modal-card-foot\">\r\n          <button class=\"button modal-no\" (click)=\"onNo()\">No</button>\r\n          <button class=\"button is-primary modal-yes\" (click)=\"onYes()\">Yes</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  @Input() message;\r\n  @Input() isOpen = false;\r\n  @Output() handleYes = new EventEmitter();\r\n  @Output() handleNo = new EventEmitter();\r\n\r\n  ngOnInit() {}\r\n\r\n  onNo = () => {\r\n    this.handleNo.emit();\r\n  }\r\n\r\n  onYes = () => {\r\n    this.handleYes.emit();\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;;;;;;AAsB9E,OAAM,MAAOC,cAAc;EApB3BC,YAAA;IAsBW,KAAAC,MAAM,GAAG,KAAK;IACb,KAAAC,SAAS,GAAG,IAAIJ,YAAY,EAAE;IAC9B,KAAAK,QAAQ,GAAG,IAAIL,YAAY,EAAE;IAIvC,KAAAM,IAAI,GAAG,MAAK;MACV,IAAI,CAACD,QAAQ,CAACE,IAAI,EAAE;IACtB,CAAC;IAED,KAAAC,KAAK,GAAG,MAAK;MACX,IAAI,CAACJ,SAAS,CAACG,IAAI,EAAE;IACvB,CAAC;;EARDE,QAAQA,CAAA,GAAI;EAAC,QAAAC,CAAA,G;qBANFT,cAAc;EAAA;EAAA,QAAAU,EAAA,G;UAAdV,cAAc;IAAAW,SAAA;IAAAC,MAAA;MAAAC,OAAA;MAAAX,MAAA;IAAA;IAAAY,OAAA;MAAAX,SAAA;MAAAC,QAAA;IAAA;IAAAW,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAjBvBE,EAAA,CAAAC,cAAA,aAA4D;QAC1DD,EAAA,CAAAE,SAAA,aAAoC;QACpCF,EAAA,CAAAC,cAAA,aAAwB;QAEQD,EAAA,CAAAG,MAAA,cAAO;QAAAH,EAAA,CAAAI,YAAA,EAAI;QAEzCJ,EAAA,CAAAC,cAAA,iBAAiC;QAC/BD,EAAA,CAAAG,MAAA,GACF;QAAAH,EAAA,CAAAI,YAAA,EAAU;QACVJ,EAAA,CAAAC,cAAA,gBAAgC;QACED,EAAA,CAAAK,UAAA,mBAAAC,gDAAA;UAAA,OAASP,GAAA,CAAAhB,IAAA,EAAM;QAAA,EAAC;QAACiB,EAAA,CAAAG,MAAA,UAAE;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAC5DJ,EAAA,CAAAC,cAAA,iBAA8D;QAAlBD,EAAA,CAAAK,UAAA,mBAAAE,iDAAA;UAAA,OAASR,GAAA,CAAAd,KAAA,EAAO;QAAA,EAAC;QAACe,EAAA,CAAAG,MAAA,WAAG;QAAAH,EAAA,CAAAI,YAAA,EAAS;;;QAX7DJ,EAAA,CAAAQ,UAAA,YAAAR,EAAA,CAAAS,eAAA,IAAAC,GAAA,EAAAX,GAAA,CAAAnB,MAAA,EAAwC;QAOrDoB,EAAA,CAAAW,SAAA,GACF;QADEX,EAAA,CAAAY,kBAAA,MAAAb,GAAA,CAAAR,OAAA,MACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}